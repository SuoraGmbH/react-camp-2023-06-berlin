swagger: "2.0"
info:
  description: "This describes the backend of a very basic time tracker."
  version: "1.0.0"
  title: "Time Tracker"
schemes:
  - "http"
paths:
  /timeEntries:
    get:
      summary: "Get all time entries"
      operationId: "getTimeEntries"
      produces:
        - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/TimeEntry"
    post:
      summary: "Add a new time entry"
      operationId: "addTimeEntry"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "TimeEntry object that should be stored"
          required: true
          schema:
            $ref: "#/definitions/TimeEntry"
      responses:
        "405":
          description: "Invalid input"
    put:
      summary: "Update an existing time entry"
      description: ""
      operationId: "updateTimeEntry"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "time entry object that needs to be added to the store"
          required: true
          schema:
            $ref: "#/definitions/TimeEntry"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Time entry not found"
        "405":
          description: "Validation exception"
  /timeEntries/{timeEntryId}:
    get:
      summary: "Find time entry by ID"
      description: "Returns a single time entry"
      operationId: "getTimeEntryById"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "timeEntryId"
          in: "path"
          description: "ID of time entry to return"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/TimeEntry"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Time entry not found"
    delete:
      summary: "Deletes a time entry"
      description: ""
      operationId: "deleteTimeEntry"
      produces:
        - "application/json"
      parameters:
        - name: "timeEntryId"
          in: "path"
          description: "Time entry id to delete"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Time entry not found"
definitions:
  TimeEntry:
    type: "object"
    required:
      - "id"
      - "comment"
      - "start"
      - "end"
    properties:
      id:
        type: "string"
      comment:
        type: "string"
        example: "doggie"
      start:
        type: "string"
        format: "date-time"
      end:
        type: "string"
        format: "date-time"
